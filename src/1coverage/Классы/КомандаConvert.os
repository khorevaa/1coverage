#Использовать "../core/"

Перем Лог;

Перем ПутьКЛогамПрокси;
Перем ПутьКИсходномуКоду;
Перем ПутьКФайлуРезультата;
Перем ФорматФайлаРезультата;

Процедура ОписаниеКоманды(Команда) Экспорт

	Команда.Опция("log-path", "", "путь к логам dbgs-proxy")
		.ТСтрока();
	Команда.Опция("src-path", "", "путь к исходному коду конфигурации")
		.ТСтрока();
	Команда.Опция("out", "", "путь к файлу результата")
		.ТСтрока();
	Команда.Опция("format", "", "формат файла результата")
		.ТСтрока();

КонецПроцедуры

Процедура ПередВыполнениемКоманды(Знач Команда) Экспорт
	
	Лог = ПараметрыПриложения.Лог();

	ПутьКЛогамПрокси = Команда.ЗначениеОпции("log-path");
	ПутьКИсходномуКоду = Команда.ЗначениеОпции("src-path");
	ПутьКФайлуРезультата =  Команда.ЗначениеОпции("out");
	ФорматФайлаРезультата =  Команда.ЗначениеОпции("format");

КонецПроцедуры

Процедура ВыполнитьКоманду(Знач Команда) Экспорт
	
	// Определить корректность параметров
	// Выполнить конвертацию
		// Скопировать текущие файлы лога во временный каталог
		// Прочитать файлы лога и объединить их в памяти
		// Преобразовать записи лога в JSON
		// Заполнить данные покрытия
		// Определить объекты конфигурации
		// Определить пути к модулям

	ДанныеПокрытия = Новый ТаблицаЗначений;
	// Сгенерировать отчет о покрытии и сохранить результат в файл
	ГенераторОтчета = Новый ГенераторОтчетаОПокрытии(ДанныеПокрытия);
	ГенераторОтчета.СохранитьОтчетВФорматеВФайл(ФорматФайлаРезультата, ПутьКФайлуРезультата);
	
КонецПроцедуры
