#Использовать xml-parser

Перем ПутьКИсходномуКоду;

Перем ТипыМодулей;
Перем ВидыОбъектовМетаданныхСМодулями;
Перем ДанныеПокрытия;

Перем Лог;

Процедура ПриСозданииОбъекта(пПутьКИсходномуКоду) Экспорт

	Лог = ПараметрыПриложения.Лог();

	ПутьКИсходномуКоду = пПутьКИсходномуКоду;

	ТипыМодулей = Новый Соответствие();
	ТипыМодулей.Вставить("МодульОбъекта", "a637f77f-3840-441d-a1c3-699c8c5cb7e0");
	ТипыМодулей.Вставить("МодульМенеджера", "d1b64a2c-8078-4982-8190-8f81aefda192");
	ТипыМодулей.Вставить("ОбщийМодуль", "d5963243-262e-4398-b4d7-fb16d06484f6");
	ТипыМодулей.Вставить("МодульФормы", "32e087ab-1491-49b6-aba7-43571b41ac2b");
	ТипыМодулей.Вставить("МодульСеанса", "9b7bbbae-9771-46f2-9e4d-2489e0ffc702");
	ТипыМодулей.Вставить("МодульУправляемогоПриложения", "d22e852a-cf8a-4f77-8ccb-3548e7792bea");
	ТипыМодулей.Вставить("МодульКоманды", "078a6af8-d22c-4248-9c33-7e90075a3d2c");
	ТипыМодулей.Вставить("МодульНабораЗаписей", "9f36fd70-4bf4-47f6-b235-935f73aab43f");
	ТипыМодулей.Вставить("НеизвестныйМодуль", "0c8cad23-bf8c-468e-b49e-12f1927c048b");

	ВидыОбъектовМетаданныхСМодулями = ВидыОбъектовМетаданныхСМодулями();

КонецПроцедуры

Процедура ЗаполнитьДанныеПокрытия(пДанныеПокрытия) Экспорт

	ДанныеПокрытия = пДанныеПокрытия;

	UUID = ДанныеПокрытия.ВыгрузитьКолонку("ИдОбъекта");

	ФорматВыгрузкиXML = ОпределитьФорматИсходногоКода(ПутьКИсходномуКоду);

	ОбработчикФайловКонфигурации = Новый ОбработчикФайловКонфигурации(ПутьКИсходномуКоду);

	Если ФорматВыгрузкиXML Тогда

		МассивФайловКонфигурации = ОбработчикФайловКонфигурации.НайтиФайлыКонфигурацииXML(UUID);

		КэшМодулей = ОбработчикФайловКонфигурации.СформироватьКэшКонфигурацииXML(МассивФайловКонфигурации);
		ПостроитьПутиКМодулямКонфигурацииXML(КэшМодулей);

	Иначе

		МассивФайловКонфигурации = ОбработчикФайловКонфигурации.НайтиФайлыКонфигурацииEDT(UUID);

		КэшМодулей = ОбработчикФайловКонфигурации.СформироватьКэшКонфигурацииEDT(МассивФайловКонфигурации);
		ПостроитьПутиКМодулямКонфигурацииEDT(КэшМодулей);

	КонецЕсли;

КонецПроцедуры

Функция ОпределитьФорматИсходногоКода(ПутьКИсходномуКоду)

	ПутьКФайлуКонфигурации = ОбъединитьПути(ПутьКИсходномуКоду, "ConfigDumpInfo.xml");
	ПутьКФайлуКонфигурацииEDT = ОбъединитьПути(ПутьКИсходномуКоду, "src", "Configuration", "Configuration.mdo");
	
	Если ФС.ФайлСуществует(ПутьКФайлуКонфигурации) Тогда
		
		Лог.Отладка("Конфигурация в формате XML");
		Возврат Истина;
		
	ИначеЕсли ФС.ФайлСуществует(ПутьКФайлуКонфигурацииEDT) Тогда
		
		Лог.Отладка("Конфигурация в формате EDT");
		Возврат Ложь;
		
	Иначе
		
		ВызватьИсключение("Не найден исходный код конфигурации или он выгружен в неизвестном формате");
		
	КонецЕсли;

КонецФункции

Процедура ПостроитьПутиКМодулямКонфигурацииXML(КэшМодулей)
	
	Для Каждого Модуль Из ДанныеПокрытия Цикл
		
		СтруктураОтбора = Новый Структура();
		СтруктураОтбора.Вставить("ИдОбъекта", Модуль.ИдОбъекта);

		НайденныеСтрокиКэша = КэшМодулей.НайтиСтроки(СтруктураОтбора);

		Если НайденныеСтрокиКэша.Количество() = 1 Тогда
			НайденнаяСтрокаКэша = НайденныеСтрокиКэша[0];

			Модуль.ПутьКОбъекту = НайденнаяСтрокаКэша.ПутьКОбъекту;
			Модуль.ИмяКоманды = НайденнаяСтрокаКэша.ИмяКоманды;
			Модуль.ИмяФормы = НайденнаяСтрокаКэша.ИмяФормы;
		ИначеЕсли НайденныеСтрокиКэша.Количество() = 0 Тогда
			Лог.Отладка("Не удалось определить объект с Id " + Модуль.ИдОбъекта);
			Продолжить;
		Иначе
			ВызватьИсключение("Ошибка заполнения данных покрытия");
		КонецЕсли;

		ПутьКМодулю = "";
		Если Модуль.ИдТипаМодуля = ТипыМодулей["МодульОбъекта"] Тогда
			ПутьКМодулю = ОбъединитьПути(Модуль.ПутьКОбъекту, "Ext", "ObjectModule.bsl");
		ИначеЕсли Модуль.ИдТипаМодуля = ТипыМодулей["МодульМенеджера"] Тогда
			ПутьКМодулю = ОбъединитьПути(Модуль.ПутьКОбъекту, "Ext", "ManagerModule.bsl");
		ИначеЕсли Модуль.ИдТипаМодуля = ТипыМодулей["ОбщийМодуль"] Тогда
			ПутьКМодулю = ОбъединитьПути(Модуль.ПутьКОбъекту, "Ext", "Module.bsl");
		ИначеЕсли Модуль.ИдТипаМодуля = ТипыМодулей["МодульФормы"] Тогда
			ПутьКМодулю = ОбъединитьПути(Модуль.ПутьКОбъекту, "Ext", "Form", "Module.bsl");
		ИначеЕсли Модуль.ИдТипаМодуля = ТипыМодулей["МодульСеанса"] Тогда
			ПутьКМодулю = ОбъединитьПути("Ext", "SessionModule.bsl");
		ИначеЕсли Модуль.ИдТипаМодуля = ТипыМодулей["МодульУправляемогоПриложения"] Тогда
			ПутьКМодулю = ОбъединитьПути("Ext", "ManagedApplicationModule.bsl");
		ИначеЕсли Модуль.ИдТипаМодуля = ТипыМодулей["МодульКоманды"] Тогда
			ЭтоОбщаяКоманда = СтрНайти(Модуль.ПутьКОбъекту, "CommonCommands");
			Если ЭтоОбщаяКоманда Тогда
				ПутьКМодулю = ОбъединитьПути(Модуль.ПутьКОбъекту, "Ext", "CommandModule.bsl");
			Иначе
				ПутьККоманде = ОбъединитьПути(Модуль.ПутьКОбъекту, "Commands", Модуль.ИмяКоманды);
				ПутьКМодулю = ОбъединитьПути(ПутьККоманде, "Ext", "CommandModule.bsl");
			КонецЕсли;
		ИначеЕсли Модуль.ИдТипаМодуля = ТипыМодулей["МодульНабораЗаписей"] Тогда
			ПутьКМодулю = ОбъединитьПути(Модуль.ПутьКОбъекту, "Ext", "RecordSetModule.bsl");
		ИначеЕсли Модуль.ИдТипаМодуля = ТипыМодулей["НеизвестныйМодуль"] Тогда
			Лог.Ошибка("Not implemented exception"); // TODO
		Иначе
			Лог.Отладка("Неизвестный идентификатор типа модуля " + Модуль.ИдТипаМодуля);
		КонецЕсли;

		ПутьКМодулю = ОбъединитьПути(ПутьКИсходномуКоду, ПутьКМодулю);
		Если Лев(ПутьКМодулю, 1) <> "." Тогда
			ПутьКМодулю = ОбъединитьПути(".", ПутьКМодулю);
		КонецЕсли;
		Модуль.ПутьКМодулю = СтрЗаменить(ПутьКМодулю, "\", "/");
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПостроитьПутиКМодулямКонфигурацииEDT(КэшМодулей)
	
	Для Каждого Модуль Из ДанныеПокрытия Цикл

		СтруктураОтбора = Новый Структура();
		СтруктураОтбора.Вставить("ИдОбъекта", Модуль.ИдОбъекта);

		НайденныеСтрокиКэша = КэшМодулей.НайтиСтроки(СтруктураОтбора);

		Если НайденныеСтрокиКэша.Количество() = 1 Тогда
			НайденнаяСтрокаКэша = НайденныеСтрокиКэша[0];

			Модуль.ПутьКОбъекту = НайденнаяСтрокаКэша.ПутьКОбъекту;
			Модуль.ИмяКоманды = НайденнаяСтрокаКэша.ИмяКоманды;
			Модуль.ИмяФормы = НайденнаяСтрокаКэша.ИмяФормы;
		ИначеЕсли НайденныеСтрокиКэша.Количество() = 0 Тогда
			Лог.Отладка("Не удалось определить объект с Id " + Модуль.ИдОбъекта);
			Продолжить;
		Иначе
			ВызватьИсключение("Ошибка заполнения данных покрытия");
		КонецЕсли;

		ПутьКМодулю = "";
		Если Модуль.ИдТипаМодуля = ТипыМодулей["МодульОбъекта"] Тогда
			ПутьКМодулю = ОбъединитьПути(Модуль.ПутьКОбъекту, "ObjectModule.bsl");
		ИначеЕсли Модуль.ИдТипаМодуля = ТипыМодулей["МодульМенеджера"] Тогда
			ПутьКМодулю = ОбъединитьПути(Модуль.ПутьКОбъекту, "ManagerModule.bsl");
		ИначеЕсли Модуль.ИдТипаМодуля = ТипыМодулей["ОбщийМодуль"] Тогда
			ПутьКМодулю = ОбъединитьПути(Модуль.ПутьКОбъекту, "Module.bsl");
		ИначеЕсли Модуль.ИдТипаМодуля = ТипыМодулей["МодульФормы"] Тогда
			ЭтоОбщаяФорма = СтрНайти(Модуль.ПутьКОбъекту, "CommonForms");
			Если ЭтоОбщаяФорма Тогда
				ПутьКМодулю = ОбъединитьПути(Модуль.ПутьКОбъекту, Модуль.ИмяФормы, "Module.bsl");
			Иначе
				ПутьКМодулю = ОбъединитьПути(Модуль.ПутьКОбъекту, "Forms", Модуль.ИмяФормы, "Module.bsl");
			КонецЕсли;
		ИначеЕсли Модуль.ИдТипаМодуля = ТипыМодулей["МодульСеанса"] Тогда
			ПутьКМодулю = ОбъединитьПути(Модуль.ПутьКОбъекту, "SessionModule.bsl");
		ИначеЕсли Модуль.ИдТипаМодуля = ТипыМодулей["МодульУправляемогоПриложения"] Тогда
			ПутьКМодулю = ОбъединитьПути(Модуль.ПутьКОбъекту, "ManagedApplicationModule.bsl");
		ИначеЕсли Модуль.ИдТипаМодуля = ТипыМодулей["МодульКоманды"] Тогда
			ЭтоОбщаяКоманда = СтрНайти(Модуль.ПутьКОбъекту, "CommonCommands");
			Если ЭтоОбщаяКоманда Тогда
				ПутьКМодулю = ОбъединитьПути(Модуль.ПутьКОбъекту, "CommandModule.bsl");
			Иначе
				ПутьККоманде = ОбъединитьПути(Модуль.ПутьКОбъекту, "Commands", Модуль.ИмяКоманды);
				ПутьКМодулю = ОбъединитьПути(ПутьККоманде, "CommandModule.bsl");
			КонецЕсли;
		ИначеЕсли Модуль.ИдТипаМодуля = ТипыМодулей["МодульНабораЗаписей"] Тогда
			ПутьКМодулю = ОбъединитьПути(Модуль.ПутьКОбъекту, "RecordSetModule.bsl");
		ИначеЕсли Модуль.ИдТипаМодуля = ТипыМодулей["НеизвестныйМодуль"] Тогда
			Лог.Ошибка("Not implemented exception"); // TODO
		Иначе
			Лог.Отладка("Неизвестный идентификатор типа модуля " + Модуль.ИдТипаМодуля);
		КонецЕсли;
		
		ПутьКМодулю = ОбъединитьПути(ПутьКИсходномуКоду, ПутьКМодулю);
		Если Лев(ПутьКМодулю, 1) <> "." Тогда
			ПутьКМодулю = ОбъединитьПути(".", ПутьКМодулю);
		КонецЕсли;
		Модуль.ПутьКМодулю = СтрЗаменить(ПутьКМодулю, "\", "/");
		
	КонецЦикла;

КонецПроцедуры

Функция ВидыОбъектовМетаданныхСМодулями()

	ВидыОбъектовМетаданных = Новый Массив();

	ВидыОбъектовМетаданных.Добавить("Configuration");
	ВидыОбъектовМетаданных.Добавить("AccumulationRegister");
	ВидыОбъектовМетаданных.Добавить("Catalog");
	ВидыОбъектовМетаданных.Добавить("Form");
	ВидыОбъектовМетаданных.Добавить("CommonCommand");
	ВидыОбъектовМетаданных.Добавить("CommonForm");
	ВидыОбъектовМетаданных.Добавить("CommonModule");
	ВидыОбъектовМетаданных.Добавить("DocumentJournal");
	ВидыОбъектовМетаданных.Добавить("Document");
	ВидыОбъектовМетаданных.Добавить("HTTPService");
	ВидыОбъектовМетаданных.Добавить("Report");
	ВидыОбъектовМетаданных.Добавить("WebService");

	Возврат ВидыОбъектовМетаданных;

КонецФункции
