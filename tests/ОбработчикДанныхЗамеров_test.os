#Использовать "../src/1coverage"

Перем юТест;
Перем Лог;

Функция ПолучитьСписокТестов(Знач Тестирование) Экспорт

	юТест = Тестирование;
	
	ИменаТестов = Новый Массив;
	
	ИменаТестов.Добавить("ТестДолжен_ПроверитьИнициализациюДанныхПокрытия");
	ИменаТестов.Добавить("ТестДолжен_ПроверитьЗаполнениеДанныхПокрытия");
	
	Возврат ИменаТестов;

КонецФункции

Процедура ТестДолжен_ПроверитьИнициализациюДанныхПокрытия() Экспорт

	ДанныеЗамеров = Новый Массив;

	ОбработчикДанныхЗамеров = Новый ОбработчикДанныхЗамеров(ДанныеЗамеров);
	ДанныеПокрытия = ОбработчикДанныхЗамеров.ЗаполнитьДанныеПокрытия();
	
	КолонкиДанныхПокрытия = ДанныеПокрытия.Колонки;
	Ожидаем.Что(КолонкиДанныхПокрытия.Количество(), "").Равно(7);

	Ожидаем.Что(КолонкиДанныхПокрытия.Найти("ИдМодуля"), "").Не_().Равно(Неопределено);
	Ожидаем.Что(КолонкиДанныхПокрытия.Найти("ИдТипаМодуля"), "").Не_().Равно(Неопределено);
	Ожидаем.Что(КолонкиДанныхПокрытия.Найти("ИмяФайла"), "").Не_().Равно(Неопределено);
	Ожидаем.Что(КолонкиДанныхПокрытия.Найти("ПутьКОбъекту"), "").Не_().Равно(Неопределено);
	Ожидаем.Что(КолонкиДанныхПокрытия.Найти("ИмяКоманды"), "").Не_().Равно(Неопределено);
	Ожидаем.Что(КолонкиДанныхПокрытия.Найти("ПутьКМодулю"), "").Не_().Равно(Неопределено);
	Ожидаем.Что(КолонкиДанныхПокрытия.Найти("НомераСтрок"), "").Не_().Равно(Неопределено);
	
КонецПроцедуры

Процедура ТестДолжен_ПроверитьЗаполнениеДанныхПокрытия() Экспорт

	ПутьКЛогамПрокси = ОбъединитьПути(ПараметрыПриложения.КаталогПроекта, "tests", "fixtures", "dbgs-log");
	
	ОбработчикЛоговПрокси = Новый ОбработчикЛоговПрокси(ПутьКЛогамПрокси);
	ДанныеЗамеров = ОбработчикЛоговПрокси.ОбработатьЛоги();
	
	ОбработчикДанныхЗамеров = Новый ОбработчикДанныхЗамеров(ДанныеЗамеров);
	ДанныеПокрытия = ОбработчикДанныхЗамеров.ЗаполнитьДанныеПокрытия();

	Результат = СериализоватьДанныеПокрытияВСтроку(ДанныеПокрытия);

	Эталон = "f304fb62-52f8-44bc-acdb-d0bfd45a4028|d1b64a2c-8078-4982-8190-8f81aefda192|<35>
	|04132787-f61a-41c5-b2fc-949ba4f6c45a|32e087ab-1491-49b6-aba7-43571b41ac2b|<579>
	|07872757-43e2-4b3f-8a6a-2bf4b4e05462|078a6af8-d22c-4248-9c33-7e90075a3d2c|<57>
	|50c2fc3a-75fe-4bf9-a867-6f37bfda3c5c|32e087ab-1491-49b6-aba7-43571b41ac2b|<57>
	|b7308561-8675-4a9c-bd27-30b65260e8db|a637f77f-3840-441d-a1c3-699c8c5cb7e0|<45710311033>
	|4fcb6ccc-1fc4-44b0-89de-e91fd6840511|32e087ab-1491-49b6-aba7-43571b41ac2b|<579>
	|8579e6d0-6ef5-4b64-8b17-7f666004b239|a637f77f-3840-441d-a1c3-699c8c5cb7e0|<46>
	|1e2790f1-29a8-4f99-ae2d-625a683ec086|d5963243-262e-4398-b4d7-fb16d06484f6|<35>
	|";
	
	Ожидаем.Что(ДанныеПокрытия.Количество(), "Количество строк в данных покрытия не совпадает с ожидаемым").Равно(8);
	Ожидаем.Что(Результат, "").Равно(Эталон);

КонецПроцедуры

Функция СериализоватьДанныеПокрытияВСтроку(ДанныеПокрытия)

	Результат = "";
	Для Каждого Стр Из ДанныеПокрытия Цикл

		НомераСтрок = "";
		Для Каждого НомерСтроки Из Стр.НомераСтрок Цикл
			НомераСтрок = НомераСтрок + НомерСтроки.Ключ;
		КонецЦикла;
		НомераСтрок = "<" + НомераСтрок + ">";

		Результат = Результат + Стр.ИдМодуля + "|" + Стр.ИдТипаМодуля + "|" + НомераСтрок + Символы.ПС;

	КонецЦикла;

	Возврат Результат;

КонецФункции

Лог = ПараметрыПриложения.Лог();
